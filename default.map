# This file contains demonstration devices and key re-mappings.

########################################
## First we must define which devices to 'grab'

# Nostromo n52
[Device:n52]
vendor=0x1532
product=0x0111

########################################
## Now we can specify which inputs to remap

# Mappings within this default section apply to all grabbed devices.
[Map:]

# A remapping statement consists of two input:output halves, seperated by a
# colon or equals sign. Whitespace is ignored.
# See constants.py for possible values for the in and out-put keys.
# If a remapping is specified more than once, the latter definition will rule.

# Eg.:
#CODE
KEY_TAB:KEY_I,KEY_F,KEY_SPACE,KEY_LEFTSHIFT+KEY_8,KEY_SPACE,KEY_LEFTSHIFT+KEY_9,KEY_SPACE,KEY_RIGHTALT+KEY_7,KEY_ENTER,KEY_TAB,KEY_ENTER,KEY_RIGHTALT+KEY_0

KEY_Q:KEY_E,KEY_L,KEY_S,KEY_E,KEY_SPACE,KEY_RIGHTALT+KEY_7,KEY_ENTER,KEY_TAB,KEY_ENTER,KEY_RIGHTALT+KEY_0

KEY_W:KEY_E,KEY_L,KEY_S,KEY_E,KEY_I,KEY_F,KEY_SPACE,KEY_LEFTSHIFT+KEY_8,KEY_SPACE,KEY_LEFTSHIFT+KEY_9,KEY_SPACE,KEY_RIGHTALT+KEY_7,KEY_ENTER,KEY_TAB,KEY_ENTER,KEY_RIGHTALT+KEY_0

KEY_E: KEY_F,KEY_U,KEY_N,KEY_C,KEY_T,KEY_I,KEY_O,KEY_N,KEY_SPACE,KEY_RIGHTALT+KEY_7,KEY_ENTER,KEY_TAB,KEY_ENTER,KEY_RIGHTALT+KEY_0

KEY_R:KEY_RIGHTCTRL+KEY_R

KEY_F:KEY_RIGHTCTRL+KEY_F

# yakuake.
KEY_CAPSLOCK=KEY_F12

# For relative actions (such as wheels) you need to specify the direction of
# motion to match using ">" (positive/up/right) and "<" (negative/down/left)
## Remap the positive wheel motion to UP
REL_WHEEL>=KEY_UP
## Remap the negative wheel motion to DOWN
REL_WHEEL<=KEY_DOWN

KEY_C: KEY_NEXTSONG

KEY_A: KEY_RIGHTALT+KEY_SEMICOLON

KEY_S: KEY_RIGHTALT+KEY_APOSTROPHE

KEY_D: KEY_LEFTCTRL+KEY_S

#SHELL

KEY_SPACE: KEY_LEFTCTRL+KEY_Q

KEY_LEFTSHIFT:KEY_LEFTCTRL+KEY_LEFTSHIFT+KEY_C

KEY_Z:KEY_LEFTCTRL+KEY_LEFTSHIFT+KEY_V

KEY_X: KEY_ENTER

KEY_LEFTALT:KEY_LEFTALT+KEY_N